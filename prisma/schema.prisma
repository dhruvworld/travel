generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id       String   @id @default(cuid())
  email    String   @unique
  password String
  role     String
  name     String   // ✅ Add this line
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model User {
  id        String   @id @default(uuid())
  name      String?
  email     String   @unique
  image     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Package {
  id          String   @id @default(uuid())
  name        String
  slug        String   @unique
  duration    Int
  price       Float
  description String
  image       String
  highlights  String[]
  featured    Boolean  @default(false)
  published   Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  isActive    Boolean  @default(true) 

  // ✅ Photos relationship
  photos Photo[] @relation("PackagePhotos")
}

model TourPackage {
  id          String   @id @default(uuid())
  name        String
  slug        String   @unique
  duration    Int
  price       Float
  description String
  image       String
  highlights  String[]
  featured    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Photo {
  id        String   @id @default(uuid())
  url       String
  caption   String?
  packageId String?
  createdAt DateTime @default(now())

  // ✅ Reverse relation to Package
  Package Package? @relation("PackagePhotos", fields: [packageId], references: [id])
}

model Image {
  id        String   @id @default(uuid())
  url       String
  alt       String?
  createdAt DateTime @default(now())
  cloudId   String  // Renamed from publicId to avoid any potential issues
  category  String?
}

model customTour {
  id           String   @id @default(cuid())
  fullName     String
  name         String   // ✅ Add this field
  email        String
  phone        String
  message      String?
  destinations String[]
  numTravelers Int
  travelOnly   Boolean
  preferences  String?
  startDate    DateTime
  endDate      DateTime
  createdAt    DateTime @default(now())
}




model Offer {
  id          String   @id @default(uuid())
  title       String
  description String
  discount    Float
  expiresAt   DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
