generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// NextAuth Required Models
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// Your existing models below
model Admin {
  id       String   @id @default(cuid())
  email    String   @unique
  password String
  role     String
  name     String   
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model User {
  id        String   @id @default(uuid())
  name      String?
  email     String   @unique
  image     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Add NextAuth relations
  accounts Account[]
  sessions Session[]
}

model Package {
  id          String   @id @default(uuid())
  name        String
  slug        String   @unique
  duration    Int
  price       Float
  description String
  location    String 
  image       String
  highlights  String[]
  featured    Boolean  @default(false)
  published   Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  isActive    Boolean  @default(true) 

  photos Photo[] @relation("PackagePhotos")
}

model TourPackage {
  id          String   @id @default(uuid())
  name        String
  slug        String   @unique
  duration    Int
  price       Float
  description String
  image       String
  highlights  String[]
  featured    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Photo {
  id        String   @id @default(uuid())
  url       String
  caption   String?
  packageId String?
  createdAt DateTime @default(now())

  Package Package? @relation("PackagePhotos", fields: [packageId], references: [id])
}

model Image {
  id        String   @id @default(uuid())
  url       String
  alt       String?
  createdAt DateTime @default(now())
  cloudId   String
  category  String?
}

model customTour {
  id           String   @id @default(cuid())
  fullName     String
  name         String
  email        String
  phone        String
  message      String?
  destinations String[]
  numTravelers Int
  travelOnly   Boolean
  preferences  String?
  startDate    DateTime
  endDate      DateTime
  createdAt    DateTime @default(now())
}

model Offer {
  id          String   @id @default(uuid())
  title       String
  description String
  discount    Float
  expiresAt   DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
